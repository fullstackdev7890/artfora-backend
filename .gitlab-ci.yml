stages:
  - build
  - deploy


variables:
  DOMAIN: dev23.artfora.com
  short_branch: $short_branch
  CI_PROJECT_NAME: $CI_PROJECT_NAME
  CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA
  proj_name: artfora
  network_docker_name: artfora
  network_docker: "192.168.12.0/24"

build:
  stage: build
  when: manual
  before_script:
    - sudo mkdir -p /home/${proj_name}-${CI_COMMIT_SHORT_SHA}
    - > 
      docker volume create --opt type=none --opt device=/home/${proj_name}-${CI_COMMIT_SHORT_SHA} ${proj_name}-${CI_COMMIT_SHORT_SHA} --opt o=bind
      ## if symlink exist delete them and recreate to build
    - > 
      sudo ln -sfn /home/${proj_name}-${CI_COMMIT_SHORT_SHA} /home/${proj_name}
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

  script:
    - cat Dockerfile | envsubst > Dockerfile.exec
    - cat docker/nginx/nginx.tpl | envsubst > docker/nginx/nginx.conf
    - cat docker/nginx/conf.d/sample.tpl | envsubst > docker/nginx/conf.d/sample.conf
    - cat Dockerfile.exec
    - cat $env > .env
    - docker build . -t "${proj_name}-${CI_COMMIT_SHORT_SHA}" --file Dockerfile.exec


  environment:
    name: $CI_COMMIT_REF_NAME

  only:
    - staging
    - development
    - production
  tags:
    - artfora

deploy:
  stage: deploy
  before_script:
    - docker volume create --name="${proj_name}-${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - cat docker-compose.example | envsubst > docker-compose.yml
    - cat docker-compose.yml
    - docker-compose up -d
    - docker exec ${proj_name} php artisan migrate --force
  after_script:
    - echo "--- clean old volumes ---"
    - volume_list=$(docker volume ls | grep "${proj_name}" | grep -v ${CI_COMMIT_SHORT_SHA} | awk '{print $2}') && for item in ${volume_list//\\n\ }; do docker volume rm $item; done
    - > 
      dir_list=$(sudo ls /home/| grep "${proj_name}" | grep -v "${CI_COMMIT_SHORT_SHA}" ) && 
      for item in ${dir_list//\\n\ };
      do sudo rm -rf "/home/$item"; 
      done
    # - echo "--- clean unused images ---"
    # - docker system prune -a -f
    # - docker stop ${proj_name} nginx && docker start ${proj_name} nginx
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - staging
    - development
    - production
  tags:
    - artfora
